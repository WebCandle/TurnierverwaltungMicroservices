// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonService.Models;

namespace PersonService.Migrations
{
    [DbContext(typeof(PersonDbContext))]
    partial class PersonDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Common.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Geburtsdatum")
                        .HasColumnType("datetime");

                    b.Property<int>("MannschaftId")
                        .HasColumnType("int");

                    b.Property<string>("Nachname")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("PersonId");

                    b.ToTable("Personen");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("Common.Spieler", b =>
                {
                    b.HasBaseType("Common.Person");

                    b.Property<string>("Aufgabe")
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Spieler");
                });

            modelBuilder.Entity("Common.Trainer", b =>
                {
                    b.HasBaseType("Common.Person");

                    b.Property<decimal>("Gehalt")
                        .HasColumnType("decimal(18, 2)");

                    b.HasDiscriminator().HasValue("Trainer");
                });
#pragma warning restore 612, 618
        }
    }
}
